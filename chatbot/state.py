from typing import Annotated

from typing_extensions import TypedDict

from langgraph.graph.message import AnyMessage, add_messages

class State(TypedDict):
    """
    Represents the state of our graph.

    Attributes:
        messages: Final messages generated by user, ai, tools, append only
        user_info: User info retrieved by user fetcher node
        selected_tools: List of tools retrieved by prepare tols node
        question: Original user question
        generation: Temporary ai generation to be evaluated
    """
    
    messages: Annotated[list[AnyMessage], add_messages]
    user_info: str
    selected_tools: list[str]
    question: str
    is_question_related: str
    generation: str        